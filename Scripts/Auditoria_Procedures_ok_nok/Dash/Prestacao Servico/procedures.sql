USE PRONTO
GO

ALTER PROCEDURE ConcMobPsRealSint 
(
	@DataTrn DATE, 
	@ValorTrn NUMERIC(17,2) OUTPUT
)
AS
BEGIN
	SELECT @ValorTrn = COALESCE(SUM(B.TrnVlrTotBru),0) FROM TRN08PS A
	LEFT JOIN TRN08 B
	ON A.TRN08PSTOKEN = B.TRNTOK AND B.TRN08VanTrnSeq > 0
	LEFT JOIN MovTrn01 C
	ON B.TRN08VanTrnSeq = C.MovTrnVanSeq
	WHERE CONVERT(DATE, A.TRN08PSDataRef) = @DataTrn
	AND A.TRN08PSStatus = 1
END
GO

ALTER PROCEDURE ConcMobPsConfSint 
(
	@DataTrn DATE, 
	@ValorTrn NUMERIC(17,2) OUTPUT
)
AS
BEGIN
	SELECT @ValorTrn = COALESCE(SUM(ValorTrn), 0)	
	FROM Trn13_aux
	WHERE Trn13DataTrn = @DataTrn
	AND Descricao = 'PS'
END
GO

ALTER PROCEDURE ConcMobPsComRealSint 
(
	@DataTrn DATE, 
	@ValorTrn NUMERIC(17,2) OUTPUT
)
AS
BEGIN
	SELECT @ValorTrn = COALESCE(SUM(MovTrnVlrLiqEst),0) FROM TRN08PS A
	LEFT JOIN TRN08 B
	ON A.TRN08PSTOKEN = B.TRNTOK AND B.TRN08VanTrnSeq > 0
	LEFT JOIN MovTrn01 C
	ON B.TRN08VanTrnSeq = C.MovTrnVanSeq
	WHERE CONVERT(DATE, A.TRN08PSDataRef) = @DataTrn
	AND A.TRN08PSStatus = 1
END
GO

ALTER PROCEDURE ConcMobPsComConfSint 
(
	@DataTrn DATE, 
	@ValorTrn NUMERIC(17,2) OUTPUT
)
AS
BEGIN
	SELECT @ValorTrn = COALESCE(SUM(MovTrnVlrLiqEst),0) FROM TRN08PS A
	LEFT JOIN TRN08 B
	ON A.TRN08PSTOKEN = B.TRNTOK AND B.TRN08VanTrnSeq > 0
	LEFT JOIN MovTrn01 C
	ON B.TRN08VanTrnSeq = C.MovTrnVanSeq
	WHERE CONVERT(DATE, A.TRN08PSDataRef) = @DataTrn
	AND A.TRN08PSStatus = 1
END
GO